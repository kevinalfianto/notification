{"version":3,"file":"/Users/kevin/training/notification/controllers/send_email.ts","sources":["/Users/kevin/training/notification/controllers/send_email.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,IAAI,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC3C,IAAI,KAAK,GAAG,YAAY,CAAC;AAEzB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,OAAO,EAAE,QAAQ,EAAE,IAAI;IACrC,IAAI;QACA,IAAI,KAAK,GAAG,OAAO,CAAC,IAAa,CAAC;QAElC,qBAAqB,CAAC,KAAK,CAAC,CAAA;QAE5B,QAAQ,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QACpD,QAAQ,CAAC,MAAM,CAAC,8BAA8B,EAAE,gDAAgD,CAAC,CAAC;QAClG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACrB;IACD,OAAM,CAAC,EAAE;QACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACrB;AACP,CAAC,CAAC,CAAC;AAEH,SAAe,qBAAqB,CAAC,KAAY;;;YAC7C,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAS,MAAM,EAAE,UAAU;gBACxD,IAAI,MAAM,EAAE;oBACR,MAAM,MAAM,CAAC;iBAChB;gBACD,UAAU,CAAC,aAAa,CAAC,UAAS,MAAM,EAAE,OAAO;oBAC7C,IAAI,MAAM,EAAE;wBACR,MAAM,MAAM,CAAC;qBAChB;oBAED,IAAI,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE;wBAChC,OAAO,EAAE,KAAK;qBACjB,CAAC,CAAC;oBAEH,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC/D,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;gBAEH,UAAU,CAAC;oBACP,UAAU,CAAC,KAAK,EAAE,CAAC;gBACvB,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC;;;;CACN;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { Email } from '../model/email';\nvar express = require('express');\nvar router = express.Router();\nvar amqp = require('amqplib/callback_api');\nvar topic = 'send_email';\n\nrouter.post('/', (request, response, next) => {\n    try {\n        let email = request.body as Email;\n\n        publishTopicSendEmail(email)\n\n        response.header(\"Access-Control-Allow-Origin\", \"*\");\n        response.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        response.send(\"201\")\n      }\n      catch(e) {\n        console.log(e);\n        response.send(\"422\")\n      }\n});\n\nasync function publishTopicSendEmail(email: Email) {\n    amqp.connect('amqp://localhost', function(error0, connection) {\n        if (error0) {\n            throw error0;\n        }\n        connection.createChannel(function(error1, channel) {\n            if (error1) {\n                throw error1;\n            }\n\n            var ok = channel.assertQueue(topic, {\n                durable: false\n            });\n\n            channel.sendToQueue(topic, Buffer.from(JSON.stringify(email)));\n            console.log(\"Sent Email %s\", email.subject);\n        });\n\n        setTimeout(function() {\n            connection.close();\n        }, 500);\n    });\n}\n\nmodule.exports = router;\n"]}